@page "/{*url}"
@inherits ai.IndexBase
@* @using ai.Data *@
@* @inject ILocalStorageService localStorage *@

<PageTitle>prompturing</PageTitle>

@* - - - - - - - - - - - - - - -  Page  - - - - - - - - - - - - - - - *@
<div class="page">
	@foreach (var scroll in pattern.sorted) {
		@if (scroll.name.Contains("<h1")) { <h1>@scroll.text</h1> } else
		@if (scroll.name.Contains("<p" )) { <p>@scroll.text</p> } else
		@if (scroll.name.Contains("<label" )) { <label>@scroll.text</label> } else
		@if (scroll.name.Contains("<input" )) { <input @bind="scroll.text" placeholder="@scroll.taglessName"></input> } else
		@if (scroll.name.Contains("<button" )) { <button @onclick="(e) => Run(scroll)">@scroll.taglessName</button> } else
		@if (scroll.name.Contains("<img." )) { <img class="@(scroll.name.Split("<img.")[1].Split(">")[0])" src="@scroll.text" /> } else
		@if (scroll.name.Contains("<img" )) { <img src="@scroll.text" /> } else
		@if (scroll.name.Contains("<footer")) { <footer>@scroll.text</footer> }
	}

</div>
<style style="display: none;">@(pattern.styleRender(styling))</style>

@* - - - - - - - - - - - - - - - Dev - - - - - - - - - - - - - - - *@
@if (!onchain) { return; }

<textarea @bind="pattern.style" @bind:event="oninput" hidden="@(!styling)" spellcheck="false" style="
	position: fixed; top: 0; left: 0; right: 0; bottom: 0;
	white-space: pre;
	margin: 0; padding: 60px 0 60px 10px;
	background-color: #000000ac; color: white; 
	font-family: 'DM Mono', monospace; font-size: 12px;
	overflow: auto;
	touch-action: pan-y pan-x;
"></textarea>

@* - - - - - - - - - - - - - - - Canvas - - - - - - - - - - - - - - - *@
<div
	hidden="@(page)"
	@onpointermove="PointerMove" 
	@onpointerdown="PointerDown" 
	@onpointerup="PointerUp" @onpointerleave="PointerUp" 
	@onwheel="Wheel" 
	style="
		user-select: none;
		position: fixed; top: 0; bottom: 0; left: 0; right: 0;
		background-color: #808080;
	"
>
	<div style="
		transform-origin: 0 0;
		transform: scale(@Scale) translate(@(Canvas.x)px, @(Canvas.y)px);
	">
		<div style="
			pointer-events: none;
			user-select: none;
			position: absolute;
			width: @(Bounds.x)px; height: @(Bounds.y)px;
			background-color: #808080;
			outline: 10px solid #909090;
			outline-offset: 0px;
		"></div>

	@code { protected bool top = false; }
	@foreach (var (scroll, index) in pattern.scrolls.Select((scroll, index) => (scroll, index))) {
		<div class="scroll" top="@(top = index == pattern.scrolls.Count - 1)" style="
			transform: translate(@(scroll.pos.x)px, @(scroll.pos.y)px);
			background-color: @(top && cull ? "red" : (scroll.edit ? "white" : "black"));
		">
			<input @bind="scroll.name" @bind:event="oninput" type="text" class="@(!scroll.edit ? "no-select" : "")" style="
				width: @(scroll.area.x)px;
				background-color: @(top && cull ? "red" : scroll.color);
			" />

			<textarea @bind="scroll.text" @bind:event="oninput" class="contents @(!scroll.edit ? "no-select" : "")" style="
				width: @(scroll.area.x)px; height: @(scroll.area.y)px; 
				color: @(top && cull || scroll.edit ? "black" : "white");
			"></textarea>


			<div hidden="@(scroll.edit)" style="
				user-select: none; moz-user-select: none; -webkit-user-select: none;
				position: fixed; top: 0; left: 0; right: 0; bottom: 0;
				outline-offset: -2px;
				@(top && pull ? "outline: 2px solid white;": "");
				@(top && held ? "outline: 2px solid #808080;": "");

				cursor: move;
			">
				<div hidden="@(!scroll.executable)" @onclick="(e) => Run(scroll)" style="
					position: absolute;
					user-select: all;
					transform: translate(0px, 0px);
					outline-offset: -2px;
					@(scroll.executable ? "outline: 2px solid white;": "");
					height: 30px; width: 100%;
				"></div>

				<div class="pull" style="
					transform: translate(@(scroll.area.x - 10)px, @(scroll.area.y + 20)px);
					width:  30px; 
					height: 30px;
					cursor: nwse-resize;
				">
					<div style="
						transform: translate(20px, 20px);
						width:  5px; 
						height: 5px;
						background-color: #808080;
					"></div>
				</div>
			</div>

			<div @onclick="() => scroll.temp = !scroll.temp" style="
				cursor: pointer;
				position: absolute;
				top: 0; right: 0;
				height: 20px;
				width: 20px;
				color: white;
				background: transparent;
				text-align: center;
				font-family: 'DM Mono', monospace;
				line-height: 20px;
				font-size: 10px;
			">@(scroll.temp ? "*" : " ")</div>

			<div style="
				pointer-events: none;
				user-select: none;
				position: absolute;
				top: 5px; left: 0;
				height: 10px;
				padding: 0 5px;
				color: white;
				text-align: center;
				font-family: 'DM Mono', monospace;
				line-height: 10px;
				font-size: 10px;
			">@scroll.tokens</div>
		</div>
	}

	</div>
	@* lng-click *@
	<div class="lng-click" hidden="@(MainPointer.index != -1 || !MainPointer.dwn)" style="
		pointer-events: none;
		user-select: none;
		position: absolute;
		top: @(MainPointer.screen.y - 5)px; left: @(MainPointer.screen.x - 5)px;
		width: 10px; height: 10px;
		background-color: #ffffff80;
		border-radius: 50%;
	"></div>
	@* dbl-click *@
	<div class="dbl-click" hidden="@(!MainPointer.dbl)" style="
		pointer-events: none;
		user-select: none;
		position: absolute;
		top: @(MainPointer.screen.y - 5)px; left: @(MainPointer.screen.x - 5)px;
		width: 10px; height: 10px;
		background-color: #ffffff80;
		border-radius: 50%;
	"></div>
</div>

@* - - - - - - - - - - - - - - - Menu - - - - - - - - - - - - - - - *@
<div hidden="@(!menu)" style="
	display: flex; 
	position: fixed;
	top: 0; bottom: 0; left: 0; right: 0;
	background-color: black;
	color: white;
	flex-flow: column; align-items: center; justify-content: center;
	gap: 10px;
	text-align: center;
	overflow-y: auto;
	height: 100vh;
	">

	<div class="row">
		<img class="icon" src="svg-icons/text.svg" />
		<div>max tokens</div>
		<div>@(MaxTokens.ToString("0000"))</div>
	</div>
	<div>
		<input @bind="MaxTokens" @bind:event="oninput" type="range" min="16" max="2048" step="2" />
	</div>
	<div>-</div>

	<div class="row">
		<img class="icon" src="svg-icons/pulse.svg" />
		<div>temperature</div>
		<div>&nbsp;@Temperature.ToString("0.0")</div>
	</div>
	<div>
		<input @bind="Temperature" @bind:event="oninput" type="range" min="0" max="1" step="0.01" />
	</div>
	<div>-</div>

	<div class="row">
		<img class="icon" src="svg-icons/contrast.svg" />
		<div>contrast</div>
		<div>@Contrast.ToStringBias()</div>
	</div>
	<div>
		<input @bind="Contrast" @bind:event="oninput" type="range" min="-2.0" max="2.0" step="0.1" />
	</div>
	<div>-</div>

	<div class="row">
		<img class="icon" src="svg-icons/loop-circular.svg" />
		<div>cyclical</div>
		<div>@Cyclical.ToStringBias()</div>
	</div>
	<div>
		<input @bind="Cyclical" @bind:event="oninput" type="range" min="-2.0" max="2.0" step="0.1" />
	</div>
	<div>-</div>
</div>

@* - - - - - - - - - - - - - - - HUD - - - - - - - - - - - - - - - *@

<div @onclick="() => menu = !menu" hidden="@(page)" class="btn" style="
		position: fixed;
		top: 10px; left: 10px;
		filter: invert(1);
	">
	<img src="svg-icons/cog.svg" />
</div>

<div @onclick="() => page = !page" hidden="@(menu)" class="btn" style="
		position: fixed;
		top: 10px; right: 10px;
	">
	<img src="svg-icons/eye.svg" style="
		filter: invert(1);
	"/>
</div>

<div @onclick="() => styling = !styling" hidden="@(!page || menu)" class="btn" style="
		position: fixed;
		top: 10px; left: 10px;
	">
	<img src="svg-icons/brush.svg" style="
		filter: invert(1);
	"/>
</div>

@* docs *@
<div hidden="@(!compass)" style="
	position: fixed;
	top: 0; bottom: 0; left: 0; right: 0;
	padding: 10px;
	padding-bottom: 50px;
	background-color: white;
	color: black;
	tab-size: 4;
	white-space: pre;
	overflow-y: auto;
	touch-action: pan-y pan-x;
">@mono.compass</div>

<div @onclick="() => compass = !compass" class="btn" style="
		position: fixed;
		bottom: 10px; left: 10px;
	">
		@* point towards canvas using Vec.Direction *@
	<img src="svg-icons/compass.svg" style="
		transform: rotate(@(Canvas.Angle + 45)deg);
	"/>
</div>

@* Pattern Management *@
<div style="
		position: fixed;
		bottom: 10px; right: 10px;
		display: flex;
		align-items: center;
		gap: 5px;
	">
	<div @onclick="pattern.Record" disabled="@(pattern.synced)" class="btn">
		<img src="svg-icons/cloud-upload.svg" />
		<div hidden="@(pattern.synced)" style="
			width: fit-content; 
			font-size: 24px; 
			position: fixed; 
			transform: translate(14px, -8px);
		">*</div>
	</div>
</div>


@* Token Tracker *@
<div style="
	pointer-events: none;
	user-select: none;
	display: flex; flex-direction: column; align-items: center;
	position: fixed;
	top: 5px; left: 50%;
	transform: translate(-50%, 0);
	mix-blend-mode: difference;
">
	<div style="
		font-family: 'DM Mono', monospace;
		font-size: 10px;
		color: #808080;
	">
		@(mono.tokens.ToString("000000"))
	</div>

	@* state has changed *@
	<div style="
		margin-top: 5px;
		height: 2px; width: 2px; 
		background-color: @(Tools.RandomColor());
	"></div>
</div>

@* 

<img src="res/logo.svg" style="width: 100px;" />
<h1 style="background-color: #808080; padding: 5px 10px;">panda<span style="all: unset; display: inline; color: black;">prompt</span></h1>
<p style="color: white; width: 180px; margin: 0 auto;">The web's very own prompt patterning habitat.</p>
<footer>Developed by <a href="https://ethanmerchant.com">Ethan Merchant</a></footer>

<input @bind="Prompter" type="username" autocomplete="username" placeholder="Name" />
<input @bind="ApiKey" type="password" autocomplete="current-password" placeholder="Api Key" class="apikey" spellCheck=false />
<a href="https://beta.openai.com/account/api-keys" target="_blank">
	Get OpenAI API Key
</a>
<div>&nbsp;</div>
<div @onclick="TryKey" class="btn">
	<img class="@(TryingKey ? "spin" : "")" src="svg-icons/key.svg" />
</div>


<div @onclick="Run()" hidden="@(!ValidKey || Menu || Page)" class="btn" style="
		position: fixed;
		top: 10px; right: 10px;
	">
	<svg class="@(Loading ? "spin" : "") @(Error ? "error" : "")" xmlns="http://www.w3.org/2000/svg" height="30" viewBox="0 0 32 32" style="
		fill: black;
	">
		<g transform="translate(1.4, 1.23)">
			<path d="M27.21,12.08c.67-2.01,.44-4.21-.63-6.04-1.61-2.8-4.85-4.24-8.01-3.57C17.16,.89,15.14-.01,13.02,0c-3.23,0-6.1,2.08-7.1,5.15-2.08,.43-3.87,1.73-4.92,3.57-1.62,2.8-1.25,6.32,.92,8.72-.67,2.01-.44,4.21,.63,6.03,1.61,2.81,4.85,4.25,8.02,3.58,1.4,1.58,3.42,2.49,5.54,2.48,3.23,0,6.1-2.08,7.1-5.15,2.08-.43,3.87-1.73,4.91-3.57,1.63-2.8,1.26-6.32-.91-8.72Zm-2.3-5.07c.64,1.12,.88,2.43,.66,3.7-.04-.03-.12-.07-.17-.1l-5.88-3.4c-.3-.17-.67-.17-.97,0l-6.89,3.98v-2.92l5.69-3.29c2.65-1.53,6.03-.62,7.56,2.03Zm-13.25,6.07l2.9-1.68,2.9,1.68v3.35l-2.9,1.68-2.9-1.68v-3.35ZM13.01,1.93c1.3,0,2.55,.45,3.55,1.28-.04,.02-.12,.07-.18,.1l-5.88,3.39c-.3,.17-.48,.49-.48,.84v7.96l-2.53-1.46V7.46c0-3.06,2.47-5.53,5.53-5.54ZM2.68,9.69h0c.65-1.12,1.66-1.98,2.88-2.43v6.99c0,.35,.18,.66,.48,.84l6.88,3.97-2.54,1.47-5.68-3.28c-2.64-1.53-3.55-4.91-2.02-7.56Zm1.55,12.83h0c-.65-1.11-.88-2.43-.66-3.7,.04,.03,.12,.07,.17,.1l5.88,3.4c.3,.17,.67,.17,.97,0l6.88-3.98v2.92l-5.69,3.28c-2.65,1.52-6.03,.62-7.56-2.02Zm11.89,5.08c-1.29,0-2.55-.45-3.54-1.28,.04-.02,.13-.07,.18-.1l5.88-3.39c.3-.17,.49-.49,.48-.84v-7.95l2.53,1.46v6.57c0,3.06-2.48,5.54-5.53,5.54Zm10.34-7.76c-.65,1.12-1.67,1.98-2.88,2.42v-6.99c0-.35-.18-.67-.48-.84h0l-6.89-3.98,2.53-1.46,5.69,3.28c2.65,1.53,3.55,4.91,2.02,7.56Z"></path>
		</g>
	</svg>
</div>

<div @onclick="() => edit = !edit" hidden="@(!ValidKey || Menu || Page)" disabled="@Loading" class="btn" style="
		position: fixed;
		bottom: 22.5px; left: calc(50vw - 22.5px);
	">
	<img src="svg-icons/@(edit ? "text": "crop").svg" style="filter: invert(0); transform: scaleX(-1);" />
</div>
<input @bind="node.Label" style="
	position: fixed; 
	bottom: calc(100% + 5px); 
	width: calc(100% - 10px); 
	padding: 0 4px; 
	background-color: #333; 
	color: #fff; 
	border: 1px solid #00000033; 
	border-radius: 2px 2px 0 0;
"/>


	<button @onclick="StyleToggle">Style</button>
	<div id="test">
	</div>
	<style contenteditable="@Style" style="display: @(Style ? "block" : "none"); white-space: pre; spellcheck: false;">
/* 
Only Shift-Enter 
* { transition: all 0.2s; }
*/
#test {
  width: 32px;
  height: 32px;
  background-color: red;
  margin: 1px;
}
	</style>


<div style="transform: translate(@(cursor.x - 3)px, @(cursor.y - 3)px); width: 6px; height: 6px; background-color: black; border: 1px solid white; user-select: none; pointer-events: none;"></div>


<svg viewBox="0 0 240 80" xmlns="http://www.w3.org/2000/svg" style="background-color: darkgray;">
	<text contenteditable x="20" y="40" textLength="32px">@Con</text>
</svg>

@functions {
	// node html markup
	private MarkupString RenderNode() {
		return new MarkupString(@"
			<div>div
			</div>
		");
	}
}

*@
