<div class="node" style="
  transform: translate(@(Noded.pos.x)px, @(Noded.pos.y)px); 
  filter: @(Top && (Held || Pull) ? "drop-shadow(2px 4px 6px #00000033)" : "unset");
">
  <input @bind="Noded.name" @bind:event="oninput" type="text" style="width: @(Noded.area.x)px;" />
  <textarea @bind="Noded.text" @bind:event="oninput" style="
    width: @(Noded.area.x)px; height: @(Noded.area.y)px; 
    background-color: @(Top && Cull ? "red" : "white");
    color: @(Top && Cull ? "white" : "black");
  "></textarea>
  <div hidden="@(Top)" style="
    background-color: #80808080;
    position: fixed; top: 0; left: 0; right: 0; bottom: 0;
  "></div>
</div>


<div style="
  width: 1px; height: 1px;
  position: fixed;
  transform: translate(@(Noded.pos.x)px, @(Noded.pos.y)px);
  background-color: magenta;
  @* display: none; *@
"></div>
<div style="
  width: 1px; height: 1px;
  position: fixed;
  transform: translate(@(Noded.pos.x + Noded.area.x + 20)px, @(Noded.pos.y + Noded.area.y + 40)px);
  background-color: magenta;
  @* display: none; *@
"></div>

@code {
  [Parameter]
  public Node Noded { get; set; } = new Node();
  [Parameter]
  public int Index { get; set; }

  @* [Parameter]
  public Action<bool> AddNode { get; set; } *@

  [Parameter] public bool Top { get; set; }

  [Parameter] public bool Held { get; set; }
  [Parameter] public bool Pull { get; set; }
  [Parameter] public bool Cull { get; set; }
}

@* 
@onmousedown="() => AddNode(true)"
@onmousedown="@(Shelved ? IndexBased.AddNode : ()=> {})"
 *@